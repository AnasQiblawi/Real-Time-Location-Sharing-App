<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Real-Time Location Sharing App</title>
    <!-- Include Bootstrap CSS via CDN -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <!-- Include Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css">
    
    <style>
        /* Custom CSS styles for the "watcher" page (5th style) */
        body {
            background-color: #f0f0f0;
        }

        .map-container {
            background-color: #ffffff;
            box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.2);
        }

        .map {
            min-height: 60vh;
            height: 100%;
        }

        .sharing-id {
            font-size: 1.5rem;
            font-weight: bold;
            margin-top: 1rem;
        }
    </style>
</head>

<body>

    
    <div class="container">

        <h1 class="text-center my-3">Real-Time Location Sharing App</h1>

        <div class="rounded shadow border border-secondary border-1">
            <div id="map" class="map rounded"></div>
        </div>
        
        <button id="shareLocation" class="btn btn-primary w-100 mt-3">Share My Location</button>
        <div id="sharingId" class="py-2">
            <div><strong>Sharing ID: </strong><span id="sharingIdValue">---</span></div>
            <div><strong>Sharing Link: </strong><a id="sharingIdLink" href="#">---</a></div>
        </div>

        <div id="sharingIdInput" hidden>
            <input type="text" id="sharedIDInput" placeholder="Enter Sharing ID">
            <button id="viewLocation" class="btn btn-primary w-100 mt-3">View Location</button>
        </div>

    </div>
    

    <!-- Socket.io script -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.6.0/socket.io.min.js"></script>
    <!-- Leaflet script -->
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    
    <script>
        $(document).ready(function () {
            // Initialize Socket.io client
            const socket = io();

            // Leaflet Map Initialization
            const map = L.map("map").setView([0, 0], 13); // Set your initial coordinates and zoom level
            L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png").addTo(map);
            // Add a marker to the map
            const marker = L.marker([0, 0]).addTo(map);

            
            // Function to update the map with new location coordinates
            function updateMapWithLocation(latitude, longitude) {
                marker.setLatLng([latitude, longitude]);
                map.setView([latitude, longitude]) //, 13);
            }

            // Event listener for the "Share My Location" button
            $("#shareLocation").click(function () {
                // Action 1: Create a new sharing ID and store it in the database
                socket.emit("createSharingID", {}, function (response) {
                    if (response.success) {
                        const sharingId = response.sharingId;
                        $("#sharingIdValue").text(sharingId);
                        $("#sharingId").removeClass("hidden");
                        const sharingIdLink = `${window.location.protocol}//${window.location.host}/sharingid/${sharingId}`;
                        $("#sharingIdLink").attr("href", sharingIdLink);
                        $("#sharingIdLink").text(sharingIdLink);
                    } else {
                        alert("Sharing ID creation failed.");
                    }
                });
            });
            
            
            const options = {
                enableHighAccuracy: true,
                // Get high accuracy reading, if available (default false)
                timeout: 1000,
                // Time to return a position successfully before error (default infinity)
                maximumAge: 2000,
                // Milliseconds for which it is acceptable to use cached position (default 0)
            };

            navigator.geolocation.watchPosition(success, error, options);

            // Fires success function immediately and when user position changes
            function success(pos) {

                let sharingId = $("#sharingIdValue").text();

                console.log(pos)
                const latitude = pos.coords.latitude;
                const longitude = pos.coords.longitude;
                // const accuracy = pos.coords.accuracy; // Accuracy in metres
                
                // Update the map with the new location
                updateMapWithLocation(latitude, longitude);
                
                // Send Updated coordinates
                socket.emit("updateLocation", {
                    sharingId: sharingId,
                    latitude: latitude,
                    longitude: longitude,
                    active: true,
                });

            }

            function error(err) {

                if (err.code === 1) {
                    console.log("Please allow geolocation access");
                    // Runs if user refuses access
                } else {
                    console.log("Cannot get current location");
                    // Runs if there was a technical problem.
                }

            }

        });
    </script>
</body>

</html>